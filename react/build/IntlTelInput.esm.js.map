{
  "version": 3,
  "sources": ["../../build/js/intlTelInput.js", "../src/IntlTelInput.js"],
  "sourcesContent": ["/*\n * International Telephone Input v20.3.0\n * https://github.com/jackocnr/intl-tel-input.git\n * Licensed under the MIT license\n */\n\n// UMD\n(function(factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    window.intlTelInput = factory();\n  }\n}(() => {\n\nvar factoryOutput = (() => {\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __export = (target, all) => {\n    for (var name in all)\n      __defProp(target, name, { get: all[name], enumerable: true });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      for (let key of __getOwnPropNames(from))\n        if (!__hasOwnProp.call(to, key) && key !== except)\n          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n    }\n    return to;\n  };\n  var __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n  // src/js/intlTelInput.js\n  var intlTelInput_exports = {};\n  __export(intlTelInput_exports, {\n    default: () => intlTelInput_default\n  });\n\n  // src/js/data.js\n  var allCountries = [\n    [\n      \"Afghanistan\",\n      \"af\",\n      \"93\"\n    ],\n    [\n      \"Albania\",\n      \"al\",\n      \"355\"\n    ],\n    [\n      \"Algeria\",\n      \"dz\",\n      \"213\"\n    ],\n    [\n      \"American Samoa\",\n      \"as\",\n      \"1\",\n      5,\n      [\"684\"]\n    ],\n    [\n      \"Andorra\",\n      \"ad\",\n      \"376\"\n    ],\n    [\n      \"Angola\",\n      \"ao\",\n      \"244\"\n    ],\n    [\n      \"Anguilla\",\n      \"ai\",\n      \"1\",\n      6,\n      [\"264\"]\n    ],\n    [\n      \"Antigua & Barbuda\",\n      \"ag\",\n      \"1\",\n      7,\n      [\"268\"]\n    ],\n    [\n      \"Argentina\",\n      \"ar\",\n      \"54\"\n    ],\n    [\n      \"Armenia\",\n      \"am\",\n      \"374\"\n    ],\n    [\n      \"Aruba\",\n      \"aw\",\n      \"297\"\n    ],\n    [\n      \"Ascension Island\",\n      \"ac\",\n      \"247\"\n    ],\n    [\n      \"Australia\",\n      \"au\",\n      \"61\",\n      0\n    ],\n    [\n      \"Austria\",\n      \"at\",\n      \"43\"\n    ],\n    [\n      \"Azerbaijan\",\n      \"az\",\n      \"994\"\n    ],\n    [\n      \"Bahamas\",\n      \"bs\",\n      \"1\",\n      8,\n      [\"242\"]\n    ],\n    [\n      \"Bahrain\",\n      \"bh\",\n      \"973\"\n    ],\n    [\n      \"Bangladesh\",\n      \"bd\",\n      \"880\"\n    ],\n    [\n      \"Barbados\",\n      \"bb\",\n      \"1\",\n      9,\n      [\"246\"]\n    ],\n    [\n      \"Belarus\",\n      \"by\",\n      \"375\"\n    ],\n    [\n      \"Belgium\",\n      \"be\",\n      \"32\"\n    ],\n    [\n      \"Belize\",\n      \"bz\",\n      \"501\"\n    ],\n    [\n      \"Benin\",\n      \"bj\",\n      \"229\"\n    ],\n    [\n      \"Bermuda\",\n      \"bm\",\n      \"1\",\n      10,\n      [\"441\"]\n    ],\n    [\n      \"Bhutan\",\n      \"bt\",\n      \"975\"\n    ],\n    [\n      \"Bolivia\",\n      \"bo\",\n      \"591\"\n    ],\n    [\n      \"Bosnia & Herzegovina\",\n      \"ba\",\n      \"387\"\n    ],\n    [\n      \"Botswana\",\n      \"bw\",\n      \"267\"\n    ],\n    [\n      \"Brazil\",\n      \"br\",\n      \"55\"\n    ],\n    [\n      \"British Indian Ocean Territory\",\n      \"io\",\n      \"246\"\n    ],\n    [\n      \"British Virgin Islands\",\n      \"vg\",\n      \"1\",\n      11,\n      [\"284\"]\n    ],\n    [\n      \"Brunei\",\n      \"bn\",\n      \"673\"\n    ],\n    [\n      \"Bulgaria\",\n      \"bg\",\n      \"359\"\n    ],\n    [\n      \"Burkina Faso\",\n      \"bf\",\n      \"226\"\n    ],\n    [\n      \"Burundi\",\n      \"bi\",\n      \"257\"\n    ],\n    [\n      \"Cambodia\",\n      \"kh\",\n      \"855\"\n    ],\n    [\n      \"Cameroon\",\n      \"cm\",\n      \"237\"\n    ],\n    [\n      \"Canada\",\n      \"ca\",\n      \"1\",\n      1,\n      [\"204\", \"226\", \"236\", \"249\", \"250\", \"263\", \"289\", \"306\", \"343\", \"354\", \"365\", \"367\", \"368\", \"382\", \"387\", \"403\", \"416\", \"418\", \"428\", \"431\", \"437\", \"438\", \"450\", \"584\", \"468\", \"474\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"584\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"683\", \"705\", \"709\", \"742\", \"753\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\"]\n    ],\n    [\n      \"Cape Verde\",\n      \"cv\",\n      \"238\"\n    ],\n    [\n      \"Caribbean Netherlands\",\n      \"bq\",\n      \"599\",\n      1,\n      [\"3\", \"4\", \"7\"]\n    ],\n    [\n      \"Cayman Islands\",\n      \"ky\",\n      \"1\",\n      12,\n      [\"345\"]\n    ],\n    [\n      \"Central African Republic\",\n      \"cf\",\n      \"236\"\n    ],\n    [\n      \"Chad\",\n      \"td\",\n      \"235\"\n    ],\n    [\n      \"Chile\",\n      \"cl\",\n      \"56\"\n    ],\n    [\n      \"China\",\n      \"cn\",\n      \"86\"\n    ],\n    [\n      \"Christmas Island\",\n      \"cx\",\n      \"61\",\n      2,\n      [\"89164\"]\n    ],\n    [\n      \"Cocos (Keeling) Islands\",\n      \"cc\",\n      \"61\",\n      1,\n      [\"89162\"]\n    ],\n    [\n      \"Colombia\",\n      \"co\",\n      \"57\"\n    ],\n    [\n      \"Comoros\",\n      \"km\",\n      \"269\"\n    ],\n    [\n      \"Congo - Brazzaville\",\n      \"cg\",\n      \"242\"\n    ],\n    [\n      \"Congo - Kinshasa\",\n      \"cd\",\n      \"243\"\n    ],\n    [\n      \"Cook Islands\",\n      \"ck\",\n      \"682\"\n    ],\n    [\n      \"Costa Rica\",\n      \"cr\",\n      \"506\"\n    ],\n    [\n      \"C\\xF4te d\\u2019Ivoire\",\n      \"ci\",\n      \"225\"\n    ],\n    [\n      \"Croatia\",\n      \"hr\",\n      \"385\"\n    ],\n    [\n      \"Cuba\",\n      \"cu\",\n      \"53\"\n    ],\n    [\n      \"Cura\\xE7ao\",\n      \"cw\",\n      \"599\",\n      0\n    ],\n    [\n      \"Cyprus\",\n      \"cy\",\n      \"357\"\n    ],\n    [\n      \"Czech Republic\",\n      \"cz\",\n      \"420\"\n    ],\n    [\n      \"Denmark\",\n      \"dk\",\n      \"45\"\n    ],\n    [\n      \"Djibouti\",\n      \"dj\",\n      \"253\"\n    ],\n    [\n      \"Dominica\",\n      \"dm\",\n      \"1\",\n      13,\n      [\"767\"]\n    ],\n    [\n      \"Dominican Republic\",\n      \"do\",\n      \"1\",\n      2,\n      [\"809\", \"829\", \"849\"]\n    ],\n    [\n      \"Ecuador\",\n      \"ec\",\n      \"593\"\n    ],\n    [\n      \"Egypt\",\n      \"eg\",\n      \"20\"\n    ],\n    [\n      \"El Salvador\",\n      \"sv\",\n      \"503\"\n    ],\n    [\n      \"Equatorial Guinea\",\n      \"gq\",\n      \"240\"\n    ],\n    [\n      \"Eritrea\",\n      \"er\",\n      \"291\"\n    ],\n    [\n      \"Estonia\",\n      \"ee\",\n      \"372\"\n    ],\n    [\n      \"Eswatini\",\n      \"sz\",\n      \"268\"\n    ],\n    [\n      \"Ethiopia\",\n      \"et\",\n      \"251\"\n    ],\n    [\n      \"Falkland Islands\",\n      \"fk\",\n      \"500\"\n    ],\n    [\n      \"Faroe Islands\",\n      \"fo\",\n      \"298\"\n    ],\n    [\n      \"Fiji\",\n      \"fj\",\n      \"679\"\n    ],\n    [\n      \"Finland\",\n      \"fi\",\n      \"358\",\n      0\n    ],\n    [\n      \"France\",\n      \"fr\",\n      \"33\"\n    ],\n    [\n      \"French Guiana\",\n      \"gf\",\n      \"594\"\n    ],\n    [\n      \"French Polynesia\",\n      \"pf\",\n      \"689\"\n    ],\n    [\n      \"Gabon\",\n      \"ga\",\n      \"241\"\n    ],\n    [\n      \"Gambia\",\n      \"gm\",\n      \"220\"\n    ],\n    [\n      \"Georgia\",\n      \"ge\",\n      \"995\"\n    ],\n    [\n      \"Germany\",\n      \"de\",\n      \"49\"\n    ],\n    [\n      \"Ghana\",\n      \"gh\",\n      \"233\"\n    ],\n    [\n      \"Gibraltar\",\n      \"gi\",\n      \"350\"\n    ],\n    [\n      \"Greece\",\n      \"gr\",\n      \"30\"\n    ],\n    [\n      \"Greenland\",\n      \"gl\",\n      \"299\"\n    ],\n    [\n      \"Grenada\",\n      \"gd\",\n      \"1\",\n      14,\n      [\"473\"]\n    ],\n    [\n      \"Guadeloupe\",\n      \"gp\",\n      \"590\",\n      0\n    ],\n    [\n      \"Guam\",\n      \"gu\",\n      \"1\",\n      15,\n      [\"671\"]\n    ],\n    [\n      \"Guatemala\",\n      \"gt\",\n      \"502\"\n    ],\n    [\n      \"Guernsey\",\n      \"gg\",\n      \"44\",\n      1,\n      [\"1481\", \"7781\", \"7839\", \"7911\"]\n    ],\n    [\n      \"Guinea\",\n      \"gn\",\n      \"224\"\n    ],\n    [\n      \"Guinea-Bissau\",\n      \"gw\",\n      \"245\"\n    ],\n    [\n      \"Guyana\",\n      \"gy\",\n      \"592\"\n    ],\n    [\n      \"Haiti\",\n      \"ht\",\n      \"509\"\n    ],\n    [\n      \"Honduras\",\n      \"hn\",\n      \"504\"\n    ],\n    [\n      \"Hong Kong\",\n      \"hk\",\n      \"852\"\n    ],\n    [\n      \"Hungary\",\n      \"hu\",\n      \"36\"\n    ],\n    [\n      \"Iceland\",\n      \"is\",\n      \"354\"\n    ],\n    [\n      \"India\",\n      \"in\",\n      \"91\"\n    ],\n    [\n      \"Indonesia\",\n      \"id\",\n      \"62\"\n    ],\n    [\n      \"Iran\",\n      \"ir\",\n      \"98\"\n    ],\n    [\n      \"Iraq\",\n      \"iq\",\n      \"964\"\n    ],\n    [\n      \"Ireland\",\n      \"ie\",\n      \"353\"\n    ],\n    [\n      \"Isle of Man\",\n      \"im\",\n      \"44\",\n      2,\n      [\"1624\", \"74576\", \"7524\", \"7924\", \"7624\"]\n    ],\n    [\n      \"Israel\",\n      \"il\",\n      \"972\"\n    ],\n    [\n      \"Italy\",\n      \"it\",\n      \"39\",\n      0\n    ],\n    [\n      \"Jamaica\",\n      \"jm\",\n      \"1\",\n      4,\n      [\"876\", \"658\"]\n    ],\n    [\n      \"Japan\",\n      \"jp\",\n      \"81\"\n    ],\n    [\n      \"Jersey\",\n      \"je\",\n      \"44\",\n      3,\n      [\"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\"]\n    ],\n    [\n      \"Jordan\",\n      \"jo\",\n      \"962\"\n    ],\n    [\n      \"Kazakhstan\",\n      \"kz\",\n      \"7\",\n      1,\n      [\"33\", \"7\"]\n    ],\n    [\n      \"Kenya\",\n      \"ke\",\n      \"254\"\n    ],\n    [\n      \"Kiribati\",\n      \"ki\",\n      \"686\"\n    ],\n    [\n      \"Kosovo\",\n      \"xk\",\n      \"383\"\n    ],\n    [\n      \"Kuwait\",\n      \"kw\",\n      \"965\"\n    ],\n    [\n      \"Kyrgyzstan\",\n      \"kg\",\n      \"996\"\n    ],\n    [\n      \"Laos\",\n      \"la\",\n      \"856\"\n    ],\n    [\n      \"Latvia\",\n      \"lv\",\n      \"371\"\n    ],\n    [\n      \"Lebanon\",\n      \"lb\",\n      \"961\"\n    ],\n    [\n      \"Lesotho\",\n      \"ls\",\n      \"266\"\n    ],\n    [\n      \"Liberia\",\n      \"lr\",\n      \"231\"\n    ],\n    [\n      \"Libya\",\n      \"ly\",\n      \"218\"\n    ],\n    [\n      \"Liechtenstein\",\n      \"li\",\n      \"423\"\n    ],\n    [\n      \"Lithuania\",\n      \"lt\",\n      \"370\"\n    ],\n    [\n      \"Luxembourg\",\n      \"lu\",\n      \"352\"\n    ],\n    [\n      \"Macau\",\n      \"mo\",\n      \"853\"\n    ],\n    [\n      \"Madagascar\",\n      \"mg\",\n      \"261\"\n    ],\n    [\n      \"Malawi\",\n      \"mw\",\n      \"265\"\n    ],\n    [\n      \"Malaysia\",\n      \"my\",\n      \"60\"\n    ],\n    [\n      \"Maldives\",\n      \"mv\",\n      \"960\"\n    ],\n    [\n      \"Mali\",\n      \"ml\",\n      \"223\"\n    ],\n    [\n      \"Malta\",\n      \"mt\",\n      \"356\"\n    ],\n    [\n      \"Marshall Islands\",\n      \"mh\",\n      \"692\"\n    ],\n    [\n      \"Martinique\",\n      \"mq\",\n      \"596\"\n    ],\n    [\n      \"Mauritania\",\n      \"mr\",\n      \"222\"\n    ],\n    [\n      \"Mauritius\",\n      \"mu\",\n      \"230\"\n    ],\n    [\n      \"Mayotte\",\n      \"yt\",\n      \"262\",\n      1,\n      [\"269\", \"639\"]\n    ],\n    [\n      \"Mexico\",\n      \"mx\",\n      \"52\"\n    ],\n    [\n      \"Micronesia\",\n      \"fm\",\n      \"691\"\n    ],\n    [\n      \"Moldova\",\n      \"md\",\n      \"373\"\n    ],\n    [\n      \"Monaco\",\n      \"mc\",\n      \"377\"\n    ],\n    [\n      \"Mongolia\",\n      \"mn\",\n      \"976\"\n    ],\n    [\n      \"Montenegro\",\n      \"me\",\n      \"382\"\n    ],\n    [\n      \"Montserrat\",\n      \"ms\",\n      \"1\",\n      16,\n      [\"664\"]\n    ],\n    [\n      \"Morocco\",\n      \"ma\",\n      \"212\",\n      0\n    ],\n    [\n      \"Mozambique\",\n      \"mz\",\n      \"258\"\n    ],\n    [\n      \"Myanmar (Burma)\",\n      \"mm\",\n      \"95\"\n    ],\n    [\n      \"Namibia\",\n      \"na\",\n      \"264\"\n    ],\n    [\n      \"Nauru\",\n      \"nr\",\n      \"674\"\n    ],\n    [\n      \"Nepal\",\n      \"np\",\n      \"977\"\n    ],\n    [\n      \"Netherlands\",\n      \"nl\",\n      \"31\"\n    ],\n    [\n      \"New Caledonia\",\n      \"nc\",\n      \"687\"\n    ],\n    [\n      \"New Zealand\",\n      \"nz\",\n      \"64\"\n    ],\n    [\n      \"Nicaragua\",\n      \"ni\",\n      \"505\"\n    ],\n    [\n      \"Niger\",\n      \"ne\",\n      \"227\"\n    ],\n    [\n      \"Nigeria\",\n      \"ng\",\n      \"234\"\n    ],\n    [\n      \"Niue\",\n      \"nu\",\n      \"683\"\n    ],\n    [\n      \"Norfolk Island\",\n      \"nf\",\n      \"672\"\n    ],\n    [\n      \"North Korea\",\n      \"kp\",\n      \"850\"\n    ],\n    [\n      \"North Macedonia\",\n      \"mk\",\n      \"389\"\n    ],\n    [\n      \"Northern Mariana Islands\",\n      \"mp\",\n      \"1\",\n      17,\n      [\"670\"]\n    ],\n    [\n      \"Norway\",\n      \"no\",\n      \"47\",\n      0\n    ],\n    [\n      \"Oman\",\n      \"om\",\n      \"968\"\n    ],\n    [\n      \"Pakistan\",\n      \"pk\",\n      \"92\"\n    ],\n    [\n      \"Palau\",\n      \"pw\",\n      \"680\"\n    ],\n    [\n      \"Palestine\",\n      \"ps\",\n      \"970\"\n    ],\n    [\n      \"Panama\",\n      \"pa\",\n      \"507\"\n    ],\n    [\n      \"Papua New Guinea\",\n      \"pg\",\n      \"675\"\n    ],\n    [\n      \"Paraguay\",\n      \"py\",\n      \"595\"\n    ],\n    [\n      \"Peru\",\n      \"pe\",\n      \"51\"\n    ],\n    [\n      \"Philippines\",\n      \"ph\",\n      \"63\"\n    ],\n    [\n      \"Poland\",\n      \"pl\",\n      \"48\"\n    ],\n    [\n      \"Portugal\",\n      \"pt\",\n      \"351\"\n    ],\n    [\n      \"Puerto Rico\",\n      \"pr\",\n      \"1\",\n      3,\n      [\"787\", \"939\"]\n    ],\n    [\n      \"Qatar\",\n      \"qa\",\n      \"974\"\n    ],\n    [\n      \"R\\xE9union\",\n      \"re\",\n      \"262\",\n      0\n    ],\n    [\n      \"Romania\",\n      \"ro\",\n      \"40\"\n    ],\n    [\n      \"Russia\",\n      \"ru\",\n      \"7\",\n      0\n    ],\n    [\n      \"Rwanda\",\n      \"rw\",\n      \"250\"\n    ],\n    [\n      \"Samoa\",\n      \"ws\",\n      \"685\"\n    ],\n    [\n      \"San Marino\",\n      \"sm\",\n      \"378\"\n    ],\n    [\n      \"S\\xE3o Tom\\xE9 & Pr\\xEDncipe\",\n      \"st\",\n      \"239\"\n    ],\n    [\n      \"Saudi Arabia\",\n      \"sa\",\n      \"966\"\n    ],\n    [\n      \"Senegal\",\n      \"sn\",\n      \"221\"\n    ],\n    [\n      \"Serbia\",\n      \"rs\",\n      \"381\"\n    ],\n    [\n      \"Seychelles\",\n      \"sc\",\n      \"248\"\n    ],\n    [\n      \"Sierra Leone\",\n      \"sl\",\n      \"232\"\n    ],\n    [\n      \"Singapore\",\n      \"sg\",\n      \"65\"\n    ],\n    [\n      \"Sint Maarten\",\n      \"sx\",\n      \"1\",\n      21,\n      [\"721\"]\n    ],\n    [\n      \"Slovakia\",\n      \"sk\",\n      \"421\"\n    ],\n    [\n      \"Slovenia\",\n      \"si\",\n      \"386\"\n    ],\n    [\n      \"Solomon Islands\",\n      \"sb\",\n      \"677\"\n    ],\n    [\n      \"Somalia\",\n      \"so\",\n      \"252\"\n    ],\n    [\n      \"South Africa\",\n      \"za\",\n      \"27\"\n    ],\n    [\n      \"South Korea\",\n      \"kr\",\n      \"82\"\n    ],\n    [\n      \"South Sudan\",\n      \"ss\",\n      \"211\"\n    ],\n    [\n      \"Spain\",\n      \"es\",\n      \"34\"\n    ],\n    [\n      \"Sri Lanka\",\n      \"lk\",\n      \"94\"\n    ],\n    [\n      \"St Barth\\xE9lemy\",\n      \"bl\",\n      \"590\",\n      1\n    ],\n    [\n      \"St Helena\",\n      \"sh\",\n      \"290\"\n    ],\n    [\n      \"St Kitts & Nevis\",\n      \"kn\",\n      \"1\",\n      18,\n      [\"869\"]\n    ],\n    [\n      \"St Lucia\",\n      \"lc\",\n      \"1\",\n      19,\n      [\"758\"]\n    ],\n    [\n      \"St Martin\",\n      \"mf\",\n      \"590\",\n      2\n    ],\n    [\n      \"St Pierre & Miquelon\",\n      \"pm\",\n      \"508\"\n    ],\n    [\n      \"St Vincent & Grenadines\",\n      \"vc\",\n      \"1\",\n      20,\n      [\"784\"]\n    ],\n    [\n      \"Sudan\",\n      \"sd\",\n      \"249\"\n    ],\n    [\n      \"Suriname\",\n      \"sr\",\n      \"597\"\n    ],\n    [\n      \"Svalbard & Jan Mayen\",\n      \"sj\",\n      \"47\",\n      1,\n      [\"79\"]\n    ],\n    [\n      \"Sweden\",\n      \"se\",\n      \"46\"\n    ],\n    [\n      \"Switzerland\",\n      \"ch\",\n      \"41\"\n    ],\n    [\n      \"Syria\",\n      \"sy\",\n      \"963\"\n    ],\n    [\n      \"Taiwan\",\n      \"tw\",\n      \"886\"\n    ],\n    [\n      \"Tajikistan\",\n      \"tj\",\n      \"992\"\n    ],\n    [\n      \"Tanzania\",\n      \"tz\",\n      \"255\"\n    ],\n    [\n      \"Thailand\",\n      \"th\",\n      \"66\"\n    ],\n    [\n      \"Timor-Leste\",\n      \"tl\",\n      \"670\"\n    ],\n    [\n      \"Togo\",\n      \"tg\",\n      \"228\"\n    ],\n    [\n      \"Tokelau\",\n      \"tk\",\n      \"690\"\n    ],\n    [\n      \"Tonga\",\n      \"to\",\n      \"676\"\n    ],\n    [\n      \"Trinidad & Tobago\",\n      \"tt\",\n      \"1\",\n      22,\n      [\"868\"]\n    ],\n    [\n      \"Tunisia\",\n      \"tn\",\n      \"216\"\n    ],\n    [\n      \"Turkey\",\n      \"tr\",\n      \"90\"\n    ],\n    [\n      \"Turkmenistan\",\n      \"tm\",\n      \"993\"\n    ],\n    [\n      \"Turks & Caicos Islands\",\n      \"tc\",\n      \"1\",\n      23,\n      [\"649\"]\n    ],\n    [\n      \"Tuvalu\",\n      \"tv\",\n      \"688\"\n    ],\n    [\n      \"Uganda\",\n      \"ug\",\n      \"256\"\n    ],\n    [\n      \"Ukraine\",\n      \"ua\",\n      \"380\"\n    ],\n    [\n      \"United Arab Emirates\",\n      \"ae\",\n      \"971\"\n    ],\n    [\n      \"United Kingdom\",\n      \"gb\",\n      \"44\",\n      0\n    ],\n    [\n      \"United States\",\n      \"us\",\n      \"1\",\n      0\n    ],\n    [\n      \"Uruguay\",\n      \"uy\",\n      \"598\"\n    ],\n    [\n      \"US Virgin Islands\",\n      \"vi\",\n      \"1\",\n      24,\n      [\"340\"]\n    ],\n    [\n      \"Uzbekistan\",\n      \"uz\",\n      \"998\"\n    ],\n    [\n      \"Vanuatu\",\n      \"vu\",\n      \"678\"\n    ],\n    [\n      \"Vatican City\",\n      \"va\",\n      \"39\",\n      1,\n      [\"06698\"]\n    ],\n    [\n      \"Venezuela\",\n      \"ve\",\n      \"58\"\n    ],\n    [\n      \"Vietnam\",\n      \"vn\",\n      \"84\"\n    ],\n    [\n      \"Wallis & Futuna\",\n      \"wf\",\n      \"681\"\n    ],\n    [\n      \"Western Sahara\",\n      \"eh\",\n      \"212\",\n      1,\n      [\"5288\", \"5289\"]\n    ],\n    [\n      \"Yemen\",\n      \"ye\",\n      \"967\"\n    ],\n    [\n      \"Zambia\",\n      \"zm\",\n      \"260\"\n    ],\n    [\n      \"Zimbabwe\",\n      \"zw\",\n      \"263\"\n    ],\n    [\n      \"\\xC5land Islands\",\n      \"ax\",\n      \"358\",\n      1,\n      [\"18\"]\n    ]\n  ];\n  for (let i = 0; i < allCountries.length; i++) {\n    const c = allCountries[i];\n    allCountries[i] = {\n      name: c[0],\n      iso2: c[1],\n      dialCode: c[2],\n      priority: c[3] || 0,\n      areaCodes: c[4] || null,\n      nodeById: {}\n    };\n  }\n  var data_default = allCountries;\n\n  // src/js/intlTelInput.js\n  var intlTelInputGlobals = {\n    getInstance: (input) => {\n      const id2 = input.getAttribute(\"data-intl-tel-input-id\");\n      return window.intlTelInputGlobals.instances[id2];\n    },\n    instances: {},\n    // using a global like this allows us to mock it in the tests\n    documentReady: () => document.readyState === \"complete\"\n  };\n  if (typeof window === \"object\") {\n    window.intlTelInputGlobals = intlTelInputGlobals;\n  }\n  var id = 0;\n  var defaults = {\n    // whether or not to allow the dropdown\n    allowDropdown: true,\n    // add a placeholder in the input with an example number for the selected country\n    autoPlaceholder: \"polite\",\n    // add a country search input at the top of the dropdown\n    countrySearch: true,\n    // modify the parentClass\n    containerClass: \"\",\n    // modify the auto placeholder\n    customPlaceholder: null,\n    // append menu to specified element\n    dropdownContainer: null,\n    // don't display these countries\n    excludeCountries: [],\n    // fix the dropdown width to the input width (rather than being as wide as the longest country name)\n    fixDropdownWidth: true,\n    // format the number as the user types\n    formatAsYouType: true,\n    // format the input value during initialisation and on setNumber\n    formatOnDisplay: true,\n    // geoIp lookup function\n    geoIpLookup: null,\n    // inject a hidden input with the name returned from this function, and on submit, populate it with the result of getNumber\n    hiddenInput: null,\n    // internationalise the plugin text e.g. search input placeholder, country names\n    i18n: {},\n    // initial country\n    initialCountry: \"\",\n    // national vs international formatting for numbers e.g. placeholders and displaying existing numbers\n    nationalMode: true,\n    // display only these countries\n    onlyCountries: [],\n    // number type to use for placeholders\n    placeholderNumberType: \"MOBILE\",\n    // the countries at the top of the list\n    preferredCountries: [],\n    // option to hide the flags - must be used with showSelectedDialCode, or allowDropdown=false\n    showFlags: true,\n    // display the international dial code next to the selected flag\n    showSelectedDialCode: false,\n    // only allow certain chars e.g. a plus followed by numeric digits, and cap at max valid length\n    strictMode: false,\n    // use full screen popup instead of dropdown for country list\n    useFullscreenPopup: typeof navigator !== \"undefined\" && typeof window !== \"undefined\" ? (\n      // we cannot just test screen size as some smartphones/website meta tags will report desktop\n      // resolutions\n      // Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\n      /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      ) || window.innerWidth <= 500\n    ) : false,\n    // specify the path to the libphonenumber script to enable validation/formatting\n    utilsScript: \"\"\n  };\n  var regionlessNanpNumbers = [\n    \"800\",\n    \"822\",\n    \"833\",\n    \"844\",\n    \"855\",\n    \"866\",\n    \"877\",\n    \"880\",\n    \"881\",\n    \"882\",\n    \"883\",\n    \"884\",\n    \"885\",\n    \"886\",\n    \"887\",\n    \"888\",\n    \"889\"\n  ];\n  var forEachInstance = (method) => {\n    const { instances } = window.intlTelInputGlobals;\n    Object.values(instances).forEach((instance) => instance[method]());\n  };\n  var Iti = class {\n    constructor(input, customOptions = {}) {\n      this.id = id++;\n      this.telInput = input;\n      this.activeItem = null;\n      this.highlightedItem = null;\n      this.options = Object.assign({}, defaults, customOptions);\n      this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\n    }\n    _init() {\n      if (this.options.useFullscreenPopup) {\n        this.options.fixDropdownWidth = false;\n      }\n      if (this.options.countrySearch && !this.options.useFullscreenPopup) {\n        this.options.fixDropdownWidth = true;\n      }\n      const forceShowFlags = this.options.allowDropdown && !this.options.showSelectedDialCode;\n      if (!this.options.showFlags && forceShowFlags) {\n        this.options.showFlags = true;\n      }\n      if (this.options.useFullscreenPopup && !this.options.dropdownContainer) {\n        this.options.dropdownContainer = document.body;\n      }\n      this.isRTL = !!this.telInput.closest(\"[dir=rtl]\");\n      const autoCountryPromise = new Promise((resolve, reject) => {\n        this.resolveAutoCountryPromise = resolve;\n        this.rejectAutoCountryPromise = reject;\n      });\n      const utilsScriptPromise = new Promise((resolve, reject) => {\n        this.resolveUtilsScriptPromise = resolve;\n        this.rejectUtilsScriptPromise = reject;\n      });\n      this.promise = Promise.all([autoCountryPromise, utilsScriptPromise]);\n      this.selectedCountryData = {};\n      this._processCountryData();\n      this._generateMarkup();\n      this._setInitialState();\n      this._initListeners();\n      this._initRequests();\n    }\n    /********************\n     *  PRIVATE METHODS\n     ********************/\n    // prepare all of the country data, including onlyCountries, excludeCountries and\n    // preferredCountries options\n    _processCountryData() {\n      this._processAllCountries();\n      this._processDialCodes();\n      this._processPreferredCountries();\n      this._translateCountryNames();\n      if (this.options.onlyCountries.length || this.options.i18n) {\n        this.countries.sort(this._countryNameSort);\n      }\n    }\n    // add a dial code to this.dialCodeToIso2Map\n    _addToDialCodeMap(iso2, dialCode, priority) {\n      if (dialCode.length > this.dialCodeMaxLen) {\n        this.dialCodeMaxLen = dialCode.length;\n      }\n      if (!this.dialCodeToIso2Map.hasOwnProperty(dialCode)) {\n        this.dialCodeToIso2Map[dialCode] = [];\n      }\n      for (let i = 0; i < this.dialCodeToIso2Map[dialCode].length; i++) {\n        if (this.dialCodeToIso2Map[dialCode][i] === iso2) {\n          return;\n        }\n      }\n      const index = priority !== void 0 ? priority : this.dialCodeToIso2Map[dialCode].length;\n      this.dialCodeToIso2Map[dialCode][index] = iso2;\n    }\n    // process onlyCountries or excludeCountries array if present\n    _processAllCountries() {\n      if (this.options.onlyCountries.length) {\n        const lowerCaseOnlyCountries = this.options.onlyCountries.map(\n          (country) => country.toLowerCase()\n        );\n        this.countries = data_default.filter(\n          (country) => lowerCaseOnlyCountries.indexOf(country.iso2) > -1\n        );\n      } else if (this.options.excludeCountries.length) {\n        const lowerCaseExcludeCountries = this.options.excludeCountries.map(\n          (country) => country.toLowerCase()\n        );\n        this.countries = data_default.filter(\n          (country) => lowerCaseExcludeCountries.indexOf(country.iso2) === -1\n        );\n      } else {\n        this.countries = data_default;\n      }\n    }\n    // Translate Countries by object literal provided on config\n    _translateCountryNames() {\n      for (let i = 0; i < this.countries.length; i++) {\n        const iso2 = this.countries[i].iso2.toLowerCase();\n        if (this.options.i18n.hasOwnProperty(iso2)) {\n          this.countries[i].name = this.options.i18n[iso2];\n        }\n      }\n    }\n    // sort by country name\n    _countryNameSort(a, b) {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    }\n    // generate this.dialCodes and this.dialCodeToIso2Map\n    _processDialCodes() {\n      this.dialCodes = {};\n      this.dialCodeMaxLen = 0;\n      this.dialCodeToIso2Map = {};\n      for (let i = 0; i < this.countries.length; i++) {\n        const c = this.countries[i];\n        if (!this.dialCodes[c.dialCode]) {\n          this.dialCodes[c.dialCode] = true;\n        }\n        this._addToDialCodeMap(c.iso2, c.dialCode, c.priority);\n      }\n      for (let i = 0; i < this.countries.length; i++) {\n        const c = this.countries[i];\n        if (c.areaCodes) {\n          const rootIso2Code = this.dialCodeToIso2Map[c.dialCode][0];\n          for (let j = 0; j < c.areaCodes.length; j++) {\n            const areaCode = c.areaCodes[j];\n            for (let k = 1; k < areaCode.length; k++) {\n              const partialDialCode = c.dialCode + areaCode.substr(0, k);\n              this._addToDialCodeMap(rootIso2Code, partialDialCode);\n              this._addToDialCodeMap(c.iso2, partialDialCode);\n            }\n            this._addToDialCodeMap(c.iso2, c.dialCode + areaCode);\n          }\n        }\n      }\n    }\n    // process preferred countries - iterate through the preferences, fetching the country data for\n    // each one\n    _processPreferredCountries() {\n      this.preferredCountries = [];\n      for (let i = 0; i < this.options.preferredCountries.length; i++) {\n        const iso2 = this.options.preferredCountries[i].toLowerCase();\n        const countryData = this._getCountryData(iso2, true);\n        if (countryData) {\n          this.preferredCountries.push(countryData);\n        }\n      }\n    }\n    // create a DOM element\n    _createEl(name, attrs, container) {\n      const el = document.createElement(name);\n      if (attrs) {\n        Object.entries(attrs).forEach(([key, value]) => el.setAttribute(key, value));\n      }\n      if (container) {\n        container.appendChild(el);\n      }\n      return el;\n    }\n    // generate all of the markup for the plugin: the selected flag overlay, and the dropdown\n    _generateMarkup() {\n      this.telInput.classList.add(\"iti__tel-input\");\n      if (!this.telInput.hasAttribute(\"autocomplete\") && !(this.telInput.form && this.telInput.form.hasAttribute(\"autocomplete\"))) {\n        this.telInput.setAttribute(\"autocomplete\", \"off\");\n      }\n      const {\n        allowDropdown,\n        showSelectedDialCode,\n        showFlags,\n        containerClass,\n        hiddenInput,\n        dropdownContainer,\n        fixDropdownWidth,\n        useFullscreenPopup,\n        countrySearch,\n        i18n\n      } = this.options;\n      let parentClass = \"iti\";\n      if (allowDropdown) {\n        parentClass += \" iti--allow-dropdown\";\n      }\n      if (showSelectedDialCode) {\n        parentClass += \" iti--show-selected-dial-code\";\n      }\n      if (showFlags) {\n        parentClass += \" iti--show-flags\";\n      }\n      if (containerClass) {\n        parentClass += ` ${containerClass}`;\n      }\n      if (!useFullscreenPopup) {\n        parentClass += \" iti--inline-dropdown\";\n      }\n      const wrapper = this._createEl(\"div\", { class: parentClass });\n      this.telInput.parentNode.insertBefore(wrapper, this.telInput);\n      if (showFlags || showSelectedDialCode) {\n        this.flagsContainer = this._createEl(\n          \"div\",\n          { class: \"iti__flag-container\" },\n          wrapper\n        );\n        this.selectedFlag = this._createEl(\n          \"div\",\n          {\n            class: \"iti__selected-flag\",\n            ...allowDropdown && {\n              role: \"button\",\n              \"aria-expanded\": \"false\",\n              \"aria-label\": this.options.i18n.selectedCountryAriaLabel || \"Selected country\",\n              \"aria-haspopup\": countrySearch ? \"true\" : \"listbox\",\n              \"aria-controls\": countrySearch ? `iti-${this.id}__dropdown-content` : `iti-${this.id}__country-listbox`,\n              ...countrySearch || { role: \"combobox\" }\n            }\n          },\n          this.flagsContainer\n        );\n        this.selectedFlagInner = this._createEl(\"div\", null, this.selectedFlag);\n        this.selectedFlagA11yText = this._createEl(\n          \"span\",\n          { class: \"iti__a11y-text\" },\n          this.selectedFlagInner\n        );\n      }\n      wrapper.appendChild(this.telInput);\n      if (this.selectedFlag && this.telInput.disabled) {\n        this.selectedFlag.setAttribute(\"aria-disabled\", \"true\");\n      }\n      if (showSelectedDialCode) {\n        this.selectedDialCode = this._createEl(\n          \"div\",\n          { class: \"iti__selected-dial-code\" },\n          this.selectedFlag\n        );\n      }\n      if (allowDropdown) {\n        if (!this.telInput.disabled) {\n          this.selectedFlag.setAttribute(\"tabindex\", \"0\");\n        }\n        this.dropdownArrow = this._createEl(\n          \"div\",\n          { class: \"iti__arrow\", \"aria-hidden\": \"true\" },\n          this.selectedFlag\n        );\n        const extraClasses = fixDropdownWidth ? \"\" : \"iti--flexible-dropdown-width\";\n        this.dropdownContent = this._createEl(\"div\", {\n          id: `iti-${this.id}__dropdown-content`,\n          class: `iti__dropdown-content iti__hide ${extraClasses}`\n        });\n        if (countrySearch) {\n          this.searchInput = this._createEl(\n            \"input\",\n            {\n              type: \"text\",\n              class: \"iti__search-input\",\n              placeholder: i18n.searchPlaceholder || \"Search\",\n              role: \"combobox\",\n              \"aria-expanded\": \"true\",\n              \"aria-label\": i18n.searchPlaceholder || \"Search\",\n              \"aria-controls\": `iti-${this.id}__country-listbox`,\n              \"aria-autocomplete\": \"list\",\n              \"autocomplete\": \"off\"\n            },\n            this.dropdownContent\n          );\n          this.searchResultsA11yText = this._createEl(\n            \"span\",\n            { class: \"iti__a11y-text\" },\n            this.dropdownContent\n          );\n        }\n        this.countryList = this._createEl(\n          \"ul\",\n          {\n            class: \"iti__country-list\",\n            id: `iti-${this.id}__country-listbox`,\n            role: \"listbox\",\n            \"aria-label\": i18n.countryListAriaLabel || \"List of countries\"\n          },\n          this.dropdownContent\n        );\n        if (this.preferredCountries.length && !countrySearch) {\n          this._appendListItems(this.preferredCountries, \"iti__preferred\", true);\n          this._createEl(\n            \"li\",\n            {\n              class: \"iti__divider\",\n              \"aria-hidden\": \"true\"\n            },\n            this.countryList\n          );\n        }\n        this._appendListItems(this.countries, \"iti__standard\");\n        if (countrySearch) {\n          this._updateSearchResultsText();\n        }\n        if (dropdownContainer) {\n          let dropdownClasses = \"iti iti--container\";\n          if (useFullscreenPopup) {\n            dropdownClasses += \" iti--fullscreen-popup\";\n          } else {\n            dropdownClasses += \" iti--inline-dropdown\";\n          }\n          if (countrySearch) {\n            dropdownClasses += \" iti--country-search\";\n          }\n          this.dropdown = this._createEl(\"div\", { class: dropdownClasses });\n          this.dropdown.appendChild(this.dropdownContent);\n        } else {\n          this.flagsContainer.appendChild(this.dropdownContent);\n        }\n      }\n      if (hiddenInput) {\n        const telInputName = this.telInput.getAttribute(\"name\");\n        const names = hiddenInput(telInputName);\n        if (names.phone) {\n          this.hiddenInput = this._createEl(\"input\", {\n            type: \"hidden\",\n            name: names.phone\n          });\n          wrapper.appendChild(this.hiddenInput);\n        }\n        if (names.country) {\n          this.hiddenInputCountry = this._createEl(\"input\", {\n            type: \"hidden\",\n            name: names.country\n          });\n          wrapper.appendChild(this.hiddenInputCountry);\n        }\n      }\n    }\n    // for each of the passed countries: add a country <li> to the countryList <ul> container\n    _appendListItems(countries, className, preferred) {\n      for (let i = 0; i < countries.length; i++) {\n        const c = countries[i];\n        const idSuffix = preferred ? \"-preferred\" : \"\";\n        const listItem = this._createEl(\n          \"li\",\n          {\n            id: `iti-${this.id}__item-${c.iso2}${idSuffix}`,\n            class: `iti__country ${className}`,\n            tabindex: \"-1\",\n            role: \"option\",\n            \"data-dial-code\": c.dialCode,\n            \"data-country-code\": c.iso2,\n            \"aria-selected\": \"false\"\n          },\n          this.countryList\n        );\n        c.nodeById[this.id] = listItem;\n        let content = \"\";\n        if (this.options.showFlags) {\n          content += `<div class='iti__flag-box'><div class='iti__flag iti__${c.iso2}'></div></div>`;\n        }\n        content += `<span class='iti__country-name'>${c.name}</span>`;\n        content += `<span class='iti__dial-code'>+${c.dialCode}</span>`;\n        listItem.insertAdjacentHTML(\"beforeend\", content);\n      }\n    }\n    // set the initial state of the input value and the selected flag by:\n    // 1. extracting a dial code from the given number\n    // 2. using explicit initialCountry\n    // 3. picking the first preferred country\n    // 4. picking the first country\n    _setInitialState(overrideAutoCountry = false) {\n      const attributeValue = this.telInput.getAttribute(\"value\");\n      const inputValue = this.telInput.value;\n      const useAttribute = attributeValue && attributeValue.charAt(0) === \"+\" && (!inputValue || inputValue.charAt(0) !== \"+\");\n      const val = useAttribute ? attributeValue : inputValue;\n      const dialCode = this._getDialCode(val);\n      const isRegionlessNanp = this._isRegionlessNanp(val);\n      const { initialCountry } = this.options;\n      if (dialCode && !isRegionlessNanp) {\n        this._updateFlagFromNumber(val);\n      } else if (initialCountry !== \"auto\" || overrideAutoCountry) {\n        const lowerInitialCountry = initialCountry ? initialCountry.toLowerCase() : \"\";\n        const isValidInitialCountry = lowerInitialCountry && this._getCountryData(lowerInitialCountry, true);\n        if (isValidInitialCountry) {\n          this._setCountry(lowerInitialCountry);\n        } else {\n          if (dialCode && isRegionlessNanp) {\n            this._setCountry(\"us\");\n          } else {\n            this._setCountry();\n          }\n        }\n      }\n      if (val) {\n        this._updateValFromNumber(val);\n      }\n    }\n    // initialise the main event listeners: input keyup, and click selected flag\n    _initListeners() {\n      this._initTelInputListeners();\n      if (this.options.allowDropdown) {\n        this._initDropdownListeners();\n      }\n      if ((this.hiddenInput || this.hiddenInputCountry) && this.telInput.form) {\n        this._initHiddenInputListener();\n      }\n    }\n    // update hidden input on form submit\n    _initHiddenInputListener() {\n      this._handleHiddenInputSubmit = () => {\n        if (this.hiddenInput) {\n          this.hiddenInput.value = this.getNumber();\n        }\n        if (this.hiddenInputCountry) {\n          this.hiddenInputCountry.value = this.getSelectedCountryData().iso2;\n        }\n      };\n      this.telInput.form.addEventListener(\n        \"submit\",\n        this._handleHiddenInputSubmit\n      );\n    }\n    // initialise the dropdown listeners\n    _initDropdownListeners() {\n      this._handleLabelClick = (e) => {\n        if (this.dropdownContent.classList.contains(\"iti__hide\")) {\n          this.telInput.focus();\n        } else {\n          e.preventDefault();\n        }\n      };\n      const label = this.telInput.closest(\"label\");\n      if (label) {\n        label.addEventListener(\"click\", this._handleLabelClick);\n      }\n      this._handleClickSelectedFlag = () => {\n        if (this.dropdownContent.classList.contains(\"iti__hide\") && !this.telInput.disabled && !this.telInput.readOnly) {\n          this._openDropdown();\n        }\n      };\n      this.selectedFlag.addEventListener(\"click\", this._handleClickSelectedFlag);\n      this._handleFlagsContainerKeydown = (e) => {\n        const isDropdownHidden = this.dropdownContent.classList.contains(\"iti__hide\");\n        if (isDropdownHidden && [\"ArrowUp\", \"ArrowDown\", \" \", \"Enter\"].includes(e.key)) {\n          e.preventDefault();\n          e.stopPropagation();\n          this._openDropdown();\n        }\n        if (e.key === \"Tab\") {\n          this._closeDropdown();\n        }\n      };\n      this.flagsContainer.addEventListener(\n        \"keydown\",\n        this._handleFlagsContainerKeydown\n      );\n    }\n    // init many requests: utils script / geo ip lookup\n    _initRequests() {\n      if (this.options.utilsScript && !window.intlTelInputUtils) {\n        if (window.intlTelInputGlobals.documentReady()) {\n          window.intlTelInputGlobals.loadUtils(this.options.utilsScript);\n        } else {\n          window.addEventListener(\"load\", () => {\n            window.intlTelInputGlobals.loadUtils(this.options.utilsScript);\n          });\n        }\n      } else {\n        this.resolveUtilsScriptPromise();\n      }\n      if (this.options.initialCountry === \"auto\" && !this.selectedCountryData.iso2) {\n        this._loadAutoCountry();\n      } else {\n        this.resolveAutoCountryPromise();\n      }\n    }\n    // perform the geo ip lookup\n    _loadAutoCountry() {\n      if (window.intlTelInputGlobals.autoCountry) {\n        this.handleAutoCountry();\n      } else if (!window.intlTelInputGlobals.startedLoadingAutoCountry) {\n        window.intlTelInputGlobals.startedLoadingAutoCountry = true;\n        if (typeof this.options.geoIpLookup === \"function\") {\n          this.options.geoIpLookup(\n            (iso2 = \"\") => {\n              const iso2Lower = iso2.toLowerCase();\n              const isValidIso2 = iso2Lower && this._getCountryData(iso2Lower, true);\n              if (isValidIso2) {\n                window.intlTelInputGlobals.autoCountry = iso2Lower;\n                setTimeout(() => forEachInstance(\"handleAutoCountry\"));\n              } else {\n                this._setInitialState(true);\n                forEachInstance(\"rejectAutoCountryPromise\");\n              }\n            },\n            () => forEachInstance(\"rejectAutoCountryPromise\")\n          );\n        }\n      }\n    }\n    // initialize the tel input listeners\n    _initTelInputListeners() {\n      const { strictMode, formatAsYouType } = this.options;\n      let userOverrideFormatting = false;\n      this._handleInputEvent = (e) => {\n        if (this._updateFlagFromNumber(this.telInput.value)) {\n          this._triggerCountryChange();\n        }\n        const isFormattingChar = e && e.data && /[^+0-9]/.test(e.data);\n        const isPaste = e && e.inputType === \"insertFromPaste\" && this.telInput.value;\n        if (isFormattingChar || isPaste && !strictMode) {\n          userOverrideFormatting = true;\n        } else if (!/[^+0-9]/.test(this.telInput.value)) {\n          userOverrideFormatting = false;\n        }\n        if (formatAsYouType && !userOverrideFormatting) {\n          const currentCaretPos = this.telInput.selectionStart;\n          const valueBeforeCaret = this.telInput.value.substring(0, currentCaretPos);\n          const relevantCharsBeforeCaret = valueBeforeCaret.replace(/[^+0-9]/g, \"\").length;\n          const isDeleteForwards = e && e.inputType === \"deleteContentForward\";\n          const formattedValue = this._formatNumberAsYouType();\n          const newCaretPos = this._translateCursorPosition(relevantCharsBeforeCaret, formattedValue, currentCaretPos, isDeleteForwards);\n          this.telInput.value = formattedValue;\n          this.telInput.setSelectionRange(newCaretPos, newCaretPos);\n        }\n      };\n      this.telInput.addEventListener(\"input\", this._handleInputEvent);\n      if (strictMode) {\n        this._handleKeydownEvent = (e) => {\n          if (e.key.length === 1 && !e.altKey && !e.ctrlKey && !e.metaKey) {\n            const isInitialPlus = this.telInput.selectionStart === 0 && e.key === \"+\";\n            const isNumeric = /^[0-9]$/.test(e.key);\n            const isAllowedChar = isInitialPlus || isNumeric;\n            const fullNumber = this._getFullNumber();\n            const coreNumber = intlTelInputUtils.getCoreNumber(fullNumber, this.selectedCountryData.iso2);\n            const hasReachedMaxLength = this.maxCoreNumberLength && coreNumber.length >= this.maxCoreNumberLength;\n            if (!isAllowedChar || hasReachedMaxLength) {\n              e.preventDefault();\n            }\n          }\n        };\n        this.telInput.addEventListener(\"keydown\", this._handleKeydownEvent);\n      }\n    }\n    // iterate through the formattedValue until hit the right number of relevant chars\n    _translateCursorPosition(relevantChars, formattedValue, prevCaretPos, isDeleteForwards) {\n      if (prevCaretPos === 0 && !isDeleteForwards) {\n        return 0;\n      }\n      let count = 0;\n      for (let i = 0; i < formattedValue.length; i++) {\n        if (/[+0-9]/.test(formattedValue[i])) {\n          count++;\n        }\n        if (count === relevantChars && !isDeleteForwards) {\n          return i + 1;\n        }\n        if (isDeleteForwards && count === relevantChars + 1) {\n          return i;\n        }\n      }\n      return formattedValue.length;\n    }\n    // adhere to the input's maxlength attr\n    _cap(number) {\n      const max = this.telInput.getAttribute(\"maxlength\");\n      return max && number.length > max ? number.substr(0, max) : number;\n    }\n    // clear the input if it just contains a dial code\n    _removeEmptyDialCode() {\n      if (this.telInput.value.charAt(0) === \"+\") {\n        const numeric = this._getNumeric(this.telInput.value);\n        if (!numeric || this.selectedCountryData.dialCode === numeric) {\n          this.telInput.value = \"\";\n        }\n      }\n    }\n    // extract the numeric digits from the given string\n    _getNumeric(s) {\n      return s.replace(/\\D/g, \"\");\n    }\n    // trigger a custom event on the input\n    _trigger(name) {\n      const e = new Event(name, {\n        bubbles: true,\n        cancelable: true\n      });\n      this.telInput.dispatchEvent(e);\n    }\n    // open the dropdown\n    _openDropdown() {\n      const { fixDropdownWidth, countrySearch } = this.options;\n      if (fixDropdownWidth) {\n        this.dropdownContent.style.width = `${this.telInput.offsetWidth}px`;\n      }\n      this.dropdownContent.classList.remove(\"iti__hide\");\n      this.selectedFlag.setAttribute(\"aria-expanded\", \"true\");\n      this._setDropdownPosition();\n      if (this.activeItem && !countrySearch) {\n        this._highlightListItem(this.activeItem, false);\n        this._scrollTo(this.activeItem, true);\n      } else {\n        const { firstElementChild } = this.countryList;\n        if (firstElementChild) {\n          this._highlightListItem(firstElementChild, false);\n          this.countryList.scrollTop = 0;\n        }\n        if (countrySearch) {\n          this.searchInput.focus();\n        }\n      }\n      this._bindDropdownListeners();\n      this.dropdownArrow.classList.add(\"iti__arrow--up\");\n      this._trigger(\"open:countrydropdown\");\n    }\n    // make sure the el has the className or not, depending on the value of shouldHaveClass\n    _toggleClass(el, className, shouldHaveClass) {\n      if (shouldHaveClass && !el.classList.contains(className)) {\n        el.classList.add(className);\n      } else if (!shouldHaveClass && el.classList.contains(className)) {\n        el.classList.remove(className);\n      }\n    }\n    // decide if should position dropdown above or below input (depends on position within viewport, and scroll)\n    _setDropdownPosition() {\n      if (this.options.dropdownContainer) {\n        this.options.dropdownContainer.appendChild(this.dropdown);\n      }\n      if (!this.options.useFullscreenPopup) {\n        const pos = this.telInput.getBoundingClientRect();\n        const windowTop = document.documentElement.scrollTop;\n        const inputTop = pos.top + windowTop;\n        const dropdownHeight = this.dropdownContent.offsetHeight;\n        const dropdownFitsBelow = inputTop + this.telInput.offsetHeight + dropdownHeight < windowTop + window.innerHeight;\n        const dropdownFitsAbove = inputTop - dropdownHeight > windowTop;\n        const positionDropdownAboveInput = !this.options.countrySearch && !dropdownFitsBelow && dropdownFitsAbove;\n        this._toggleClass(\n          this.dropdownContent,\n          \"iti__dropdown-content--dropup\",\n          positionDropdownAboveInput\n        );\n        if (this.options.dropdownContainer) {\n          const extraTop = positionDropdownAboveInput ? 0 : this.telInput.offsetHeight;\n          this.dropdown.style.top = `${inputTop + extraTop}px`;\n          this.dropdown.style.left = `${pos.left + document.body.scrollLeft}px`;\n          this._handleWindowScroll = () => this._closeDropdown();\n          window.addEventListener(\"scroll\", this._handleWindowScroll);\n        }\n      }\n    }\n    // we only bind dropdown listeners when the dropdown is open\n    _bindDropdownListeners() {\n      this._handleMouseoverCountryList = (e) => {\n        const listItem = e.target.closest(\".iti__country\");\n        if (listItem) {\n          this._highlightListItem(listItem, false);\n        }\n      };\n      this.countryList.addEventListener(\n        \"mouseover\",\n        this._handleMouseoverCountryList\n      );\n      this._handleClickCountryList = (e) => {\n        const listItem = e.target.closest(\".iti__country\");\n        if (listItem) {\n          this._selectListItem(listItem);\n        }\n      };\n      this.countryList.addEventListener(\"click\", this._handleClickCountryList);\n      let isOpening = true;\n      this._handleClickOffToClose = () => {\n        if (!isOpening) {\n          this._closeDropdown();\n        }\n        isOpening = false;\n      };\n      document.documentElement.addEventListener(\n        \"click\",\n        this._handleClickOffToClose\n      );\n      let query = \"\";\n      let queryTimer = null;\n      this._handleKeydownOnDropdown = (e) => {\n        if ([\"ArrowUp\", \"ArrowDown\", \"Enter\", \"Escape\"].includes(e.key)) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n            this._handleUpDownKey(e.key);\n          } else if (e.key === \"Enter\") {\n            this._handleEnterKey();\n          } else if (e.key === \"Escape\") {\n            this._closeDropdown();\n          }\n        }\n        if (!this.options.countrySearch && /^[a-zA-Z\u00C0-\u00FF\u0430-\u044F\u0410-\u042F ]$/.test(e.key)) {\n          e.stopPropagation();\n          if (queryTimer) {\n            clearTimeout(queryTimer);\n          }\n          query += e.key.toLowerCase();\n          this._searchForCountry(query);\n          queryTimer = setTimeout(() => {\n            query = \"\";\n          }, 1e3);\n        }\n      };\n      document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\n      if (this.options.countrySearch) {\n        const doFilter = () => {\n          const inputQuery = this.searchInput.value.trim();\n          if (inputQuery) {\n            this._filterCountries(inputQuery);\n          } else {\n            this._filterCountries(\"\", true);\n          }\n        };\n        let keyupTimer = null;\n        this._handleSearchChange = () => {\n          if (keyupTimer) {\n            clearTimeout(keyupTimer);\n          }\n          keyupTimer = setTimeout(() => {\n            doFilter();\n            keyupTimer = null;\n          }, 100);\n        };\n        this.searchInput.addEventListener(\"input\", this._handleSearchChange);\n        this.searchInput.addEventListener(\"click\", (e) => e.stopPropagation());\n      }\n    }\n    // turns \"R\u00E9union\" into \"Reunion\"\n    // from https://stackoverflow.com/a/37511463\n    _normaliseString(s = \"\") {\n      return s.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n    }\n    _filterCountries(query, isReset = false) {\n      let isFirst = true;\n      this.countryList.innerHTML = \"\";\n      const normalisedQuery = this._normaliseString(query);\n      for (let i = 0; i < this.countries.length; i++) {\n        const c = this.countries[i];\n        const normalisedCountryName = this._normaliseString(c.name);\n        const fullDialCode = `+${c.dialCode}`;\n        if (isReset || normalisedCountryName.includes(normalisedQuery) || fullDialCode.includes(normalisedQuery) || c.iso2.includes(normalisedQuery)) {\n          this.countryList.appendChild(c.nodeById[this.id]);\n          if (isFirst) {\n            this._highlightListItem(c.nodeById[this.id], false);\n            isFirst = false;\n          }\n        }\n      }\n      this.countryList.scrollTop = 0;\n      this._updateSearchResultsText();\n    }\n    // update search results text (for a11y)\n    _updateSearchResultsText() {\n      const { i18n } = this.options;\n      const count = this.countryList.childElementCount;\n      let searchText;\n      if (count === 0) {\n        searchText = i18n.zeroSearchResults || \"No results found\";\n      } else if (count === 1) {\n        searchText = i18n.oneSearchResult || \"1 result found\";\n      } else {\n        searchText = i18n.multipleSearchResults ? i18n.multipleSearchResults.replace(\"${count}\", count) : `${count} results found`;\n      }\n      this.searchResultsA11yText.textContent = searchText;\n    }\n    // highlight the next/prev item in the list (and ensure it is visible)\n    _handleUpDownKey(key) {\n      let next = key === \"ArrowUp\" ? this.highlightedItem.previousElementSibling : this.highlightedItem.nextElementSibling;\n      if (next) {\n        if (next.classList.contains(\"iti__divider\")) {\n          next = key === \"ArrowUp\" ? next.previousElementSibling : next.nextElementSibling;\n        }\n      } else if (this.countryList.childElementCount > 1) {\n        next = key === \"ArrowUp\" ? this.countryList.lastElementChild : this.countryList.firstElementChild;\n      }\n      if (next) {\n        this._scrollTo(next, false);\n        const doFocus = !this.options.countrySearch;\n        this._highlightListItem(next, doFocus);\n      }\n    }\n    // select the currently highlighted item\n    _handleEnterKey() {\n      if (this.highlightedItem) {\n        this._selectListItem(this.highlightedItem);\n      }\n    }\n    // find the first list item whose name starts with the query string\n    _searchForCountry(query) {\n      for (let i = 0; i < this.countries.length; i++) {\n        if (this._startsWith(this.countries[i].name, query)) {\n          const listItem = this.countries[i].nodeById[this.id];\n          this._highlightListItem(listItem, false);\n          this._scrollTo(listItem, true);\n          break;\n        }\n      }\n    }\n    // check if string a starts with string b\n    _startsWith(a, b) {\n      return a.substr(0, b.length).toLowerCase() === b;\n    }\n    // update the input's value to the given val (format first if possible)\n    // NOTE: this is called from _setInitialState, handleUtils and setNumber\n    _updateValFromNumber(fullNumber) {\n      let number = fullNumber;\n      if (this.options.formatOnDisplay && window.intlTelInputUtils && this.selectedCountryData) {\n        const useNational = this.options.nationalMode || number.charAt(0) !== \"+\" && !this.options.showSelectedDialCode;\n        const { NATIONAL, INTERNATIONAL } = intlTelInputUtils.numberFormat;\n        const format = useNational ? NATIONAL : INTERNATIONAL;\n        number = intlTelInputUtils.formatNumber(\n          number,\n          this.selectedCountryData.iso2,\n          format\n        );\n      }\n      number = this._beforeSetNumber(number);\n      this.telInput.value = number;\n    }\n    // check if need to select a new flag based on the given number\n    // Note: called from _setInitialState, keyup handler, setNumber\n    _updateFlagFromNumber(fullNumber) {\n      const plusIndex = fullNumber.indexOf(\"+\");\n      let number = plusIndex ? fullNumber.substring(plusIndex) : fullNumber;\n      const selectedDialCode = this.selectedCountryData.dialCode;\n      const isNanp = selectedDialCode === \"1\";\n      if (number && isNanp && number.charAt(0) !== \"+\") {\n        if (number.charAt(0) !== \"1\") {\n          number = `1${number}`;\n        }\n        number = `+${number}`;\n      }\n      if (this.options.showSelectedDialCode && selectedDialCode && number.charAt(0) !== \"+\") {\n        number = `+${selectedDialCode}${number}`;\n      }\n      const dialCode = this._getDialCode(number, true);\n      const numeric = this._getNumeric(number);\n      let iso2 = null;\n      if (dialCode) {\n        const iso2Codes = this.dialCodeToIso2Map[this._getNumeric(dialCode)];\n        const alreadySelected = iso2Codes.indexOf(this.selectedCountryData.iso2) !== -1 && numeric.length <= dialCode.length - 1;\n        const isRegionlessNanpNumber = selectedDialCode === \"1\" && this._isRegionlessNanp(numeric);\n        if (!isRegionlessNanpNumber && !alreadySelected) {\n          for (let j = 0; j < iso2Codes.length; j++) {\n            if (iso2Codes[j]) {\n              iso2 = iso2Codes[j];\n              break;\n            }\n          }\n        }\n      } else if (number.charAt(0) === \"+\" && numeric.length) {\n        iso2 = \"\";\n      } else if ((!number || number === \"+\") && !this.selectedCountryData.iso2) {\n        iso2 = this.defaultCountry;\n      }\n      if (iso2 !== null) {\n        return this._setCountry(iso2);\n      }\n      return false;\n    }\n    // check if the given number is a regionless NANP number (expects the number to contain an\n    // international dial code)\n    _isRegionlessNanp(number) {\n      const numeric = this._getNumeric(number);\n      if (numeric.charAt(0) === \"1\") {\n        const areaCode = numeric.substr(1, 3);\n        return regionlessNanpNumbers.indexOf(areaCode) !== -1;\n      }\n      return false;\n    }\n    // remove highlighting from other list items and highlight the given item\n    _highlightListItem(listItem, shouldFocus) {\n      const prevItem = this.highlightedItem;\n      if (prevItem) {\n        prevItem.classList.remove(\"iti__highlight\");\n        prevItem.setAttribute(\"aria-selected\", \"false\");\n      }\n      this.highlightedItem = listItem;\n      this.highlightedItem.classList.add(\"iti__highlight\");\n      this.highlightedItem.setAttribute(\"aria-selected\", \"true\");\n      this.selectedFlag.setAttribute(\n        \"aria-activedescendant\",\n        listItem.getAttribute(\"id\")\n      );\n      if (this.options.countrySearch) {\n        this.searchInput.setAttribute(\n          \"aria-activedescendant\",\n          listItem.getAttribute(\"id\")\n        );\n      }\n      if (shouldFocus) {\n        this.highlightedItem.focus();\n      }\n    }\n    // find the country data for the given iso2 code\n    // the ignoreOnlyCountriesOption is only used during init() while parsing the onlyCountries array\n    _getCountryData(iso2, allowFail) {\n      for (let i = 0; i < this.countries.length; i++) {\n        if (this.countries[i].iso2 === iso2) {\n          return this.countries[i];\n        }\n      }\n      if (allowFail) {\n        return null;\n      }\n      throw new Error(`No country data for '${iso2}'`);\n    }\n    // update the selected flag, dial code (if showSelectedDialCode), placeholder, title, and active list item\n    // Note: called from _setInitialState, _updateFlagFromNumber, _selectListItem, setCountry\n    _setCountry(iso2) {\n      const { allowDropdown, showSelectedDialCode, showFlags, countrySearch, i18n } = this.options;\n      const prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\n      this.selectedCountryData = iso2 ? this._getCountryData(iso2, false) : {};\n      if (this.selectedCountryData.iso2) {\n        this.defaultCountry = this.selectedCountryData.iso2;\n      }\n      if (this.selectedFlagInner) {\n        let flagClass = \"\";\n        let a11yText = \"\";\n        if (iso2) {\n          if (showFlags) {\n            flagClass = `iti__flag iti__${iso2}`;\n            a11yText = `${this.selectedCountryData.name} +${this.selectedCountryData.dialCode}`;\n          }\n        } else {\n          flagClass = \"iti__flag iti__globe\";\n          a11yText = i18n.noCountrySelected || \"No country selected\";\n        }\n        this.selectedFlagInner.className = flagClass;\n        this.selectedFlagA11yText.textContent = a11yText;\n      }\n      this._setSelectedCountryFlagTitleAttribute(iso2, showSelectedDialCode);\n      if (showSelectedDialCode) {\n        const dialCode = this.selectedCountryData.dialCode ? `+${this.selectedCountryData.dialCode}` : \"\";\n        this.selectedDialCode.innerHTML = dialCode;\n        const selectedFlagWidth = this.selectedFlag.offsetWidth || this._getHiddenSelectedFlagWidth();\n        if (this.isRTL) {\n          this.telInput.style.paddingRight = `${selectedFlagWidth + 6}px`;\n        } else {\n          this.telInput.style.paddingLeft = `${selectedFlagWidth + 6}px`;\n        }\n      }\n      this._updatePlaceholder();\n      this._updateMaxLength();\n      if (allowDropdown && !countrySearch) {\n        const prevItem = this.activeItem;\n        if (prevItem) {\n          prevItem.classList.remove(\"iti__active\");\n          prevItem.setAttribute(\"aria-selected\", \"false\");\n        }\n        if (iso2) {\n          const nextItem = this.countryList.querySelector(\n            `#iti-${this.id}__item-${iso2}-preferred`\n          ) || this.countryList.querySelector(\n            `#iti-${this.id}__item-${iso2}`\n          );\n          nextItem.setAttribute(\"aria-selected\", \"true\");\n          nextItem.classList.add(\"iti__active\");\n          this.activeItem = nextItem;\n        }\n      }\n      return prevCountry.iso2 !== iso2;\n    }\n    // update the maximum valid number length for the currently selected country\n    _updateMaxLength() {\n      if (this.options.strictMode && window.intlTelInputUtils) {\n        if (this.selectedCountryData.iso2) {\n          const numberType = intlTelInputUtils.numberType[this.options.placeholderNumberType];\n          let exampleNumber = intlTelInputUtils.getExampleNumber(\n            this.selectedCountryData.iso2,\n            null,\n            numberType,\n            true\n          );\n          let validNumber = exampleNumber;\n          while (intlTelInputUtils.isPossibleNumber(exampleNumber, this.selectedCountryData.iso2)) {\n            validNumber = exampleNumber;\n            exampleNumber += \"0\";\n          }\n          const coreNumber = intlTelInputUtils.getCoreNumber(validNumber, this.selectedCountryData.iso2);\n          this.maxCoreNumberLength = coreNumber.length;\n        } else {\n          this.maxCoreNumberLength = null;\n        }\n      }\n    }\n    _setSelectedCountryFlagTitleAttribute(iso2, showSelectedDialCode) {\n      if (!this.selectedFlag) {\n        return;\n      }\n      let title;\n      if (iso2 && !showSelectedDialCode) {\n        title = `${this.selectedCountryData.name}: +${this.selectedCountryData.dialCode}`;\n      } else if (iso2) {\n        title = this.selectedCountryData.name;\n      } else {\n        title = \"Unknown\";\n      }\n      this.selectedFlag.setAttribute(\"title\", title);\n    }\n    // when the input is in a hidden container during initialisation, we must inject some markup\n    // into the end of the DOM to calculate the correct offsetWidth\n    // NOTE: this is only used when showSelectedDialCode is enabled, so flagsContainer and selectedFlag\n    // will definitely exist\n    _getHiddenSelectedFlagWidth() {\n      const containerClone = this.telInput.parentNode.cloneNode();\n      containerClone.style.visibility = \"hidden\";\n      document.body.appendChild(containerClone);\n      const flagsContainerClone = this.flagsContainer.cloneNode();\n      containerClone.appendChild(flagsContainerClone);\n      const selectedFlagClone = this.selectedFlag.cloneNode(true);\n      flagsContainerClone.appendChild(selectedFlagClone);\n      const width = selectedFlagClone.offsetWidth;\n      containerClone.parentNode.removeChild(containerClone);\n      return width;\n    }\n    // update the input placeholder to an example number from the currently selected country\n    _updatePlaceholder() {\n      const {\n        autoPlaceholder,\n        placeholderNumberType,\n        nationalMode,\n        customPlaceholder\n      } = this.options;\n      const shouldSetPlaceholder = autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && autoPlaceholder === \"polite\";\n      if (window.intlTelInputUtils && shouldSetPlaceholder) {\n        const numberType = intlTelInputUtils.numberType[placeholderNumberType];\n        let placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(\n          this.selectedCountryData.iso2,\n          nationalMode,\n          numberType\n        ) : \"\";\n        placeholder = this._beforeSetNumber(placeholder);\n        if (typeof customPlaceholder === \"function\") {\n          placeholder = customPlaceholder(placeholder, this.selectedCountryData);\n        }\n        this.telInput.setAttribute(\"placeholder\", placeholder);\n      }\n    }\n    // called when the user selects a list item from the dropdown\n    _selectListItem(listItem) {\n      const flagChanged = this._setCountry(\n        listItem.getAttribute(\"data-country-code\")\n      );\n      this._closeDropdown();\n      this._updateDialCode(listItem.getAttribute(\"data-dial-code\"));\n      this.telInput.focus();\n      if (flagChanged) {\n        this._triggerCountryChange();\n      }\n    }\n    // close the dropdown and unbind any listeners\n    _closeDropdown() {\n      this.dropdownContent.classList.add(\"iti__hide\");\n      this.selectedFlag.setAttribute(\"aria-expanded\", \"false\");\n      this.selectedFlag.removeAttribute(\"aria-activedescendant\");\n      if (this.highlightedItem) {\n        this.highlightedItem.setAttribute(\"aria-selected\", \"false\");\n      }\n      if (this.options.countrySearch) {\n        this.searchInput.removeAttribute(\"aria-activedescendant\");\n      }\n      this.dropdownArrow.classList.remove(\"iti__arrow--up\");\n      document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\n      if (this.options.countrySearch) {\n        this.searchInput.removeEventListener(\"input\", this._handleSearchChange);\n      }\n      document.documentElement.removeEventListener(\n        \"click\",\n        this._handleClickOffToClose\n      );\n      this.countryList.removeEventListener(\n        \"mouseover\",\n        this._handleMouseoverCountryList\n      );\n      this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\n      if (this.options.dropdownContainer) {\n        if (!this.options.useFullscreenPopup) {\n          window.removeEventListener(\"scroll\", this._handleWindowScroll);\n        }\n        if (this.dropdown.parentNode) {\n          this.dropdown.parentNode.removeChild(this.dropdown);\n        }\n      }\n      this._trigger(\"close:countrydropdown\");\n    }\n    // check if an element is visible within it's container, else scroll until it is\n    _scrollTo(element, middle) {\n      const container = this.countryList;\n      const windowTop = document.documentElement.scrollTop;\n      const containerHeight = container.offsetHeight;\n      const containerTop = container.getBoundingClientRect().top + windowTop;\n      const containerBottom = containerTop + containerHeight;\n      const elementHeight = element.offsetHeight;\n      const elementTop = element.getBoundingClientRect().top + windowTop;\n      const elementBottom = elementTop + elementHeight;\n      let newScrollTop = elementTop - containerTop + container.scrollTop;\n      const middleOffset = containerHeight / 2 - elementHeight / 2;\n      if (elementTop < containerTop) {\n        if (middle) {\n          newScrollTop -= middleOffset;\n        }\n        container.scrollTop = newScrollTop;\n      } else if (elementBottom > containerBottom) {\n        if (middle) {\n          newScrollTop += middleOffset;\n        }\n        const heightDifference = containerHeight - elementHeight;\n        container.scrollTop = newScrollTop - heightDifference;\n      }\n    }\n    // replace any existing dial code with the new one\n    // Note: called from _selectListItem and setCountry\n    _updateDialCode(newDialCodeBare) {\n      const inputVal = this.telInput.value;\n      const newDialCode = `+${newDialCodeBare}`;\n      let newNumber;\n      if (inputVal.charAt(0) === \"+\") {\n        const prevDialCode = this._getDialCode(inputVal);\n        if (prevDialCode) {\n          newNumber = inputVal.replace(prevDialCode, newDialCode);\n        } else {\n          newNumber = newDialCode;\n        }\n        this.telInput.value = newNumber;\n      }\n    }\n    // try and extract a valid international dial code from a full telephone number\n    // Note: returns the raw string inc plus character and any whitespace/dots etc\n    _getDialCode(number, includeAreaCode) {\n      let dialCode = \"\";\n      if (number.charAt(0) === \"+\") {\n        let numericChars = \"\";\n        for (let i = 0; i < number.length; i++) {\n          const c = number.charAt(i);\n          if (!isNaN(parseInt(c, 10))) {\n            numericChars += c;\n            if (includeAreaCode) {\n              if (this.dialCodeToIso2Map[numericChars]) {\n                dialCode = number.substr(0, i + 1);\n              }\n            } else {\n              if (this.dialCodes[numericChars]) {\n                dialCode = number.substr(0, i + 1);\n                break;\n              }\n            }\n            if (numericChars.length === this.dialCodeMaxLen) {\n              break;\n            }\n          }\n        }\n      }\n      return dialCode;\n    }\n    // get the input val, adding the dial code if showSelectedDialCode is enabled\n    _getFullNumber() {\n      const val = this.telInput.value.trim();\n      const { dialCode } = this.selectedCountryData;\n      let prefix;\n      const numericVal = this._getNumeric(val);\n      if (this.options.showSelectedDialCode && !this.options.nationalMode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\n        prefix = `+${dialCode}`;\n      } else {\n        prefix = \"\";\n      }\n      return prefix + val;\n    }\n    // remove the dial code if showSelectedDialCode is enabled\n    // also cap the length if the input has a maxlength attribute\n    _beforeSetNumber(fullNumber) {\n      let number = fullNumber;\n      if (this.options.showSelectedDialCode) {\n        let dialCode = this._getDialCode(number);\n        if (dialCode) {\n          dialCode = `+${this.selectedCountryData.dialCode}`;\n          const start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\n          number = number.substr(start);\n        }\n      }\n      return this._cap(number);\n    }\n    // trigger the 'countrychange' event\n    _triggerCountryChange() {\n      this._trigger(\"countrychange\");\n    }\n    // format the number as the user types\n    _formatNumberAsYouType() {\n      const val = this._getFullNumber();\n      const result = window.intlTelInputUtils ? intlTelInputUtils.formatNumberAsYouType(val, this.selectedCountryData.iso2) : val;\n      const { dialCode } = this.selectedCountryData;\n      if (this.options.showSelectedDialCode && !this.options.nationalMode && this.telInput.value.charAt(0) !== \"+\" && result.includes(`+${dialCode}`)) {\n        const afterDialCode = result.split(`+${dialCode}`)[1] || \"\";\n        return afterDialCode.trim();\n      }\n      return result;\n    }\n    /**************************\n     *  SECRET PUBLIC METHODS\n     **************************/\n    // this is called when the geoip call returns\n    handleAutoCountry() {\n      if (this.options.initialCountry === \"auto\") {\n        this.defaultCountry = window.intlTelInputGlobals.autoCountry;\n        if (!this.telInput.value) {\n          this.setCountry(this.defaultCountry);\n        }\n        this.resolveAutoCountryPromise();\n      }\n    }\n    // this is called when the utils request completes\n    handleUtils() {\n      if (window.intlTelInputUtils) {\n        if (this.telInput.value) {\n          this._updateValFromNumber(this.telInput.value);\n        }\n        if (this.selectedCountryData.iso2) {\n          this._updatePlaceholder();\n          this._updateMaxLength();\n        }\n      }\n      this.resolveUtilsScriptPromise();\n    }\n    /********************\n     *  PUBLIC METHODS\n     ********************/\n    // remove plugin\n    destroy() {\n      if (this.options.allowDropdown) {\n        this._closeDropdown();\n        this.selectedFlag.removeEventListener(\n          \"click\",\n          this._handleClickSelectedFlag\n        );\n        this.flagsContainer.removeEventListener(\n          \"keydown\",\n          this._handleFlagsContainerKeydown\n        );\n        const label = this.telInput.closest(\"label\");\n        if (label) {\n          label.removeEventListener(\"click\", this._handleLabelClick);\n        }\n      }\n      const { form } = this.telInput;\n      if (this._handleHiddenInputSubmit && form) {\n        form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\n      }\n      this.telInput.removeEventListener(\"input\", this._handleInputEvent);\n      if (this._handleKeydownEvent) {\n        this.telInput.removeEventListener(\"keydown\", this._handleKeydownEvent);\n      }\n      this.telInput.removeAttribute(\"data-intl-tel-input-id\");\n      const wrapper = this.telInput.parentNode;\n      wrapper.parentNode.insertBefore(this.telInput, wrapper);\n      wrapper.parentNode.removeChild(wrapper);\n      delete window.intlTelInputGlobals.instances[this.id];\n    }\n    // get the extension from the current number\n    getExtension() {\n      if (window.intlTelInputUtils) {\n        return intlTelInputUtils.getExtension(\n          this._getFullNumber(),\n          this.selectedCountryData.iso2\n        );\n      }\n      return \"\";\n    }\n    // format the number to the given format\n    getNumber(format) {\n      if (window.intlTelInputUtils) {\n        const { iso2 } = this.selectedCountryData;\n        return intlTelInputUtils.formatNumber(\n          this._getFullNumber(),\n          iso2,\n          format\n        );\n      }\n      return \"\";\n    }\n    // get the type of the entered number e.g. landline/mobile\n    getNumberType() {\n      if (window.intlTelInputUtils) {\n        return intlTelInputUtils.getNumberType(\n          this._getFullNumber(),\n          this.selectedCountryData.iso2\n        );\n      }\n      return -99;\n    }\n    // get the country data for the currently selected flag\n    getSelectedCountryData() {\n      return this.selectedCountryData;\n    }\n    // get the validation error\n    getValidationError() {\n      if (window.intlTelInputUtils) {\n        const { iso2 } = this.selectedCountryData;\n        return intlTelInputUtils.getValidationError(this._getFullNumber(), iso2);\n      }\n      return -99;\n    }\n    // validate the input val - assumes the global function isPossibleNumber (from utilsScript)\n    isValidNumber(mobileOnly = true) {\n      const val = this._getFullNumber();\n      if (/\\p{L}/u.test(val)) {\n        return false;\n      }\n      return window.intlTelInputUtils ? intlTelInputUtils.isPossibleNumber(val, this.selectedCountryData.iso2, mobileOnly) : null;\n    }\n    // validate the input val (precise) - assumes the global function isValidNumber (from utilsScript)\n    isValidNumberPrecise() {\n      const val = this._getFullNumber();\n      if (/\\p{L}/u.test(val)) {\n        return false;\n      }\n      return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, this.selectedCountryData.iso2) : null;\n    }\n    // update the selected flag, and update the input val accordingly\n    setCountry(iso2) {\n      const iso2Lower = iso2.toLowerCase();\n      if (this.selectedCountryData.iso2 !== iso2Lower) {\n        this._setCountry(iso2Lower);\n        this._updateDialCode(this.selectedCountryData.dialCode);\n        this._triggerCountryChange();\n      }\n    }\n    // set the input value and update the flag\n    setNumber(number) {\n      const flagChanged = this._updateFlagFromNumber(number);\n      this._updateValFromNumber(number);\n      if (flagChanged) {\n        this._triggerCountryChange();\n      }\n    }\n    // set the placeholder number typ\n    setPlaceholderNumberType(type) {\n      this.options.placeholderNumberType = type;\n      this._updatePlaceholder();\n    }\n  };\n  intlTelInputGlobals.getCountryData = () => data_default;\n  var injectScript = (path, handleSuccess, handleFailure) => {\n    const script = document.createElement(\"script\");\n    script.onload = () => {\n      forEachInstance(\"handleUtils\");\n      if (handleSuccess) {\n        handleSuccess();\n      }\n    };\n    script.onerror = () => {\n      forEachInstance(\"rejectUtilsScriptPromise\");\n      if (handleFailure) {\n        handleFailure();\n      }\n    };\n    script.className = \"iti-load-utils\";\n    script.async = true;\n    script.src = path;\n    document.body.appendChild(script);\n  };\n  intlTelInputGlobals.loadUtils = (path) => {\n    if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) {\n      window.intlTelInputGlobals.startedLoadingUtilsScript = true;\n      return new Promise(\n        (resolve, reject) => injectScript(path, resolve, reject)\n      );\n    }\n    return null;\n  };\n  intlTelInputGlobals.defaults = defaults;\n  intlTelInputGlobals.version = \"20.3.0\";\n  var intlTelInput = (input, options) => {\n    const iti = new Iti(input, options);\n    iti._init();\n    input.setAttribute(\"data-intl-tel-input-id\", iti.id);\n    window.intlTelInputGlobals.instances[iti.id] = iti;\n    return iti;\n  };\n  var intlTelInput_default = intlTelInput;\n  return __toCommonJS(intlTelInput_exports);\n})();\n\n// UMD\n  return factoryOutput.default;\n}));\n", "/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport intlTelInput from \"../../build/js/intlTelInput\";\n\nconst IntlTelInput = ({\n  initialValue,\n  onChangeNumber,\n  onChangeCountry,\n  onChangeValidity,\n  onChangeErrorCode,\n  usePreciseValidation,\n  initOptions,\n  className,\n  disabled,\n  onFocus,\n  onBlur,\n  placeholder,\n  inputProps,\n}) => {\n  const inputRef = useRef(null);\n  const itiRef = useRef(null);\n  \n  const update = () => {\n    const num = itiRef.current.getNumber();\n    const countryIso = itiRef.current.getSelectedCountryData().iso2;\n    // note: this number will be in standard E164 format, but any container component can use\n    // intlTelInputUtils.formatNumber() to convert this to another format\n    // as well as intlTelInputUtils.getNumberType() etc. if need be\n    onChangeNumber(num);\n    onChangeCountry(countryIso);\n\n    const isValid = usePreciseValidation ? itiRef.current.isValidNumberPrecise() : itiRef.current.isValidNumber();\n    if (isValid) {\n      onChangeValidity(true);\n      onChangeErrorCode(null);\n    } else {\n      const errorCode = itiRef.current.getValidationError();\n      onChangeValidity(false);\n      onChangeErrorCode(errorCode);\n    }\n  };\n  \n  useEffect(() => {\n    // store a reference to the current input ref, which otherwise is already lost in the cleanup function\n    const inputRefCurrent = inputRef.current;\n    itiRef.current = intlTelInput(inputRef.current, initOptions);\n    inputRefCurrent.addEventListener(\"countrychange\", update);\n    return () => {\n      inputRefCurrent.removeEventListener(\"countrychange\", update);\n      itiRef.current.destroy();\n    };\n  }, []);\n  \n  return (\n    <input\n      type=\"tel\"\n      ref={inputRef}\n      onInput={update}\n      defaultValue={initialValue}\n      className={className}\n      disabled={disabled}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      placeholder={placeholder}\n      {...inputProps}\n    />\n  );\n};\n\nIntlTelInput.propTypes = {\n  initialValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChangeNumber: PropTypes.func,\n  onChangeCountry: PropTypes.func,\n  onChangeValidity: PropTypes.func,\n  onChangeErrorCode: PropTypes.func,\n  usePreciseValidation: PropTypes.bool,\n  initOptions: PropTypes.shape({\n    allowDropdown: PropTypes.bool,\n    autoPlaceholder: PropTypes.string,\n    containerClass: PropTypes.string,\n    countrySearch: PropTypes.bool,\n    customPlaceholder: PropTypes.func,\n    dropdownContainer: PropTypes.node,\n    excludeCountries: PropTypes.arrayOf(PropTypes.string),\n    fixDropdownWidth: PropTypes.bool,\n    formatAsYouType: PropTypes.bool,\n    formatOnDisplay: PropTypes.bool,\n    geoIpLookup: PropTypes.func,\n    hiddenInput: PropTypes.func,\n    i18n: PropTypes.objectOf(PropTypes.string),\n    initialCountry: PropTypes.string,\n    nationalMode: PropTypes.bool,\n    onlyCountries: PropTypes.arrayOf(PropTypes.string),\n    placeholderNumberType: PropTypes.string,\n    preferredCountries: PropTypes.arrayOf(PropTypes.string),\n    showFlags: PropTypes.bool,\n    showSelectedDialCode: PropTypes.bool,\n    useFullscreenPopup: PropTypes.bool,\n    utilsScript: PropTypes.string,\n  }),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  inputProps: PropTypes.object,\n};\n\nIntlTelInput.defaultProps = {\n  initialValue: \"\",\n  placeholder: \"\",\n  onChangeNumber: () => {},\n  onChangeCountry: () => {},\n  onChangeValidity: () => {},\n  onChangeErrorCode: () => {},\n  usePreciseValidation: false,\n  initOptions: {},\n  className: \"\",\n  disabled: false,\n  onFocus: () => {},\n  onBlur: () => {},\n  inputProps: {},\n};\n\nexport default IntlTelInput;"],
  "mappings": "ygBAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,EAOC,SAASC,EAAS,CACb,OAAOD,GAAW,UAAYA,EAAO,QACvCA,EAAO,QAAUC,EAAQ,EAEzB,OAAO,aAAeA,EAAQ,CAElC,GAAE,IAAM,CAER,IAAIC,GAAiB,IAAM,CACzB,IAAIC,EAAY,OAAO,eACnBC,EAAmB,OAAO,yBAC1BC,EAAoB,OAAO,oBAC3BC,EAAe,OAAO,UAAU,eAChCC,EAAW,CAACC,EAAQC,IAAQ,CAC9B,QAASC,KAAQD,EACfN,EAAUK,EAAQE,EAAM,CAAE,IAAKD,EAAIC,CAAI,EAAG,WAAY,EAAK,CAAC,CAChE,EACIC,EAAc,CAACC,EAAIC,EAAMC,EAAQC,IAAS,CAC5C,GAAIF,GAAQ,OAAOA,GAAS,UAAY,OAAOA,GAAS,WACtD,QAASG,KAAOX,EAAkBQ,CAAI,EAChC,CAACP,EAAa,KAAKM,EAAII,CAAG,GAAKA,IAAQF,GACzCX,EAAUS,EAAII,EAAK,CAAE,IAAK,IAAMH,EAAKG,CAAG,EAAG,WAAY,EAAED,EAAOX,EAAiBS,EAAMG,CAAG,IAAMD,EAAK,UAAW,CAAC,EAEvH,OAAOH,CACT,EACIK,EAAgBC,GAAQP,EAAYR,EAAU,CAAC,EAAG,aAAc,CAAE,MAAO,EAAK,CAAC,EAAGe,CAAG,EAGrFC,EAAuB,CAAC,EAC5BZ,EAASY,EAAsB,CAC7B,QAAS,IAAMC,CACjB,CAAC,EAGD,IAAIC,EAAe,CACjB,CACE,cACA,KACA,IACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,iBACA,KACA,IACA,EACA,CAAC,KAAK,CACR,EACA,CACE,UACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,WACA,KACA,IACA,EACA,CAAC,KAAK,CACR,EACA,CACE,oBACA,KACA,IACA,EACA,CAAC,KAAK,CACR,EACA,CACE,YACA,KACA,IACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,mBACA,KACA,KACF,EACA,CACE,YACA,KACA,KACA,CACF,EACA,CACE,UACA,KACA,IACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,UACA,KACA,IACA,EACA,CAAC,KAAK,CACR,EACA,CACE,UACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,WACA,KACA,IACA,EACA,CAAC,KAAK,CACR,EACA,CACE,UACA,KACA,KACF,EACA,CACE,UACA,KACA,IACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,UACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,SACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,uBACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,SACA,KACA,IACF,EACA,CACE,iCACA,KACA,KACF,EACA,CACE,yBACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,SACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,eACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,SACA,KACA,IACA,EACA,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,CAC3X,EACA,CACE,aACA,KACA,KACF,EACA,CACE,wBACA,KACA,MACA,EACA,CAAC,IAAK,IAAK,GAAG,CAChB,EACA,CACE,iBACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,2BACA,KACA,KACF,EACA,CACE,OACA,KACA,KACF,EACA,CACE,QACA,KACA,IACF,EACA,CACE,QACA,KACA,IACF,EACA,CACE,mBACA,KACA,KACA,EACA,CAAC,OAAO,CACV,EACA,CACE,0BACA,KACA,KACA,EACA,CAAC,OAAO,CACV,EACA,CACE,WACA,KACA,IACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,sBACA,KACA,KACF,EACA,CACE,mBACA,KACA,KACF,EACA,CACE,eACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,wBACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,OACA,KACA,IACF,EACA,CACE,aACA,KACA,MACA,CACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,iBACA,KACA,KACF,EACA,CACE,UACA,KACA,IACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,WACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,qBACA,KACA,IACA,EACA,CAAC,MAAO,MAAO,KAAK,CACtB,EACA,CACE,UACA,KACA,KACF,EACA,CACE,QACA,KACA,IACF,EACA,CACE,cACA,KACA,KACF,EACA,CACE,oBACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,mBACA,KACA,KACF,EACA,CACE,gBACA,KACA,KACF,EACA,CACE,OACA,KACA,KACF,EACA,CACE,UACA,KACA,MACA,CACF,EACA,CACE,SACA,KACA,IACF,EACA,CACE,gBACA,KACA,KACF,EACA,CACE,mBACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,UACA,KACA,IACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,YACA,KACA,KACF,EACA,CACE,SACA,KACA,IACF,EACA,CACE,YACA,KACA,KACF,EACA,CACE,UACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,aACA,KACA,MACA,CACF,EACA,CACE,OACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,YACA,KACA,KACF,EACA,CACE,WACA,KACA,KACA,EACA,CAAC,OAAQ,OAAQ,OAAQ,MAAM,CACjC,EACA,CACE,SACA,KACA,KACF,EACA,CACE,gBACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,YACA,KACA,KACF,EACA,CACE,UACA,KACA,IACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,QACA,KACA,IACF,EACA,CACE,YACA,KACA,IACF,EACA,CACE,OACA,KACA,IACF,EACA,CACE,OACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,cACA,KACA,KACA,EACA,CAAC,OAAQ,QAAS,OAAQ,OAAQ,MAAM,CAC1C,EACA,CACE,SACA,KACA,KACF,EACA,CACE,QACA,KACA,KACA,CACF,EACA,CACE,UACA,KACA,IACA,EACA,CAAC,MAAO,KAAK,CACf,EACA,CACE,QACA,KACA,IACF,EACA,CACE,SACA,KACA,KACA,EACA,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAM,CACjD,EACA,CACE,SACA,KACA,KACF,EACA,CACE,aACA,KACA,IACA,EACA,CAAC,KAAM,GAAG,CACZ,EACA,CACE,QACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,OACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,gBACA,KACA,KACF,EACA,CACE,YACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,WACA,KACA,IACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,OACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,mBACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,YACA,KACA,KACF,EACA,CACE,UACA,KACA,MACA,EACA,CAAC,MAAO,KAAK,CACf,EACA,CACE,SACA,KACA,IACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,aACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,UACA,KACA,MACA,CACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,kBACA,KACA,IACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,cACA,KACA,IACF,EACA,CACE,gBACA,KACA,KACF,EACA,CACE,cACA,KACA,IACF,EACA,CACE,YACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,OACA,KACA,KACF,EACA,CACE,iBACA,KACA,KACF,EACA,CACE,cACA,KACA,KACF,EACA,CACE,kBACA,KACA,KACF,EACA,CACE,2BACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,SACA,KACA,KACA,CACF,EACA,CACE,OACA,KACA,KACF,EACA,CACE,WACA,KACA,IACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,YACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,mBACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,OACA,KACA,IACF,EACA,CACE,cACA,KACA,IACF,EACA,CACE,SACA,KACA,IACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,cACA,KACA,IACA,EACA,CAAC,MAAO,KAAK,CACf,EACA,CACE,QACA,KACA,KACF,EACA,CACE,aACA,KACA,MACA,CACF,EACA,CACE,UACA,KACA,IACF,EACA,CACE,SACA,KACA,IACA,CACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,+BACA,KACA,KACF,EACA,CACE,eACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,eACA,KACA,KACF,EACA,CACE,YACA,KACA,IACF,EACA,CACE,eACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,WACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,kBACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,eACA,KACA,IACF,EACA,CACE,cACA,KACA,IACF,EACA,CACE,cACA,KACA,KACF,EACA,CACE,QACA,KACA,IACF,EACA,CACE,YACA,KACA,IACF,EACA,CACE,mBACA,KACA,MACA,CACF,EACA,CACE,YACA,KACA,KACF,EACA,CACE,mBACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,WACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,YACA,KACA,MACA,CACF,EACA,CACE,uBACA,KACA,KACF,EACA,CACE,0BACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,QACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,uBACA,KACA,KACA,EACA,CAAC,IAAI,CACP,EACA,CACE,SACA,KACA,IACF,EACA,CACE,cACA,KACA,IACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,aACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,WACA,KACA,IACF,EACA,CACE,cACA,KACA,KACF,EACA,CACE,OACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,QACA,KACA,KACF,EACA,CACE,oBACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,UACA,KACA,KACF,EACA,CACE,SACA,KACA,IACF,EACA,CACE,eACA,KACA,KACF,EACA,CACE,yBACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,SACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,uBACA,KACA,KACF,EACA,CACE,iBACA,KACA,KACA,CACF,EACA,CACE,gBACA,KACA,IACA,CACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,oBACA,KACA,IACA,GACA,CAAC,KAAK,CACR,EACA,CACE,aACA,KACA,KACF,EACA,CACE,UACA,KACA,KACF,EACA,CACE,eACA,KACA,KACA,EACA,CAAC,OAAO,CACV,EACA,CACE,YACA,KACA,IACF,EACA,CACE,UACA,KACA,IACF,EACA,CACE,kBACA,KACA,KACF,EACA,CACE,iBACA,KACA,MACA,EACA,CAAC,OAAQ,MAAM,CACjB,EACA,CACE,QACA,KACA,KACF,EACA,CACE,SACA,KACA,KACF,EACA,CACE,WACA,KACA,KACF,EACA,CACE,mBACA,KACA,MACA,EACA,CAAC,IAAI,CACP,CACF,EACA,QAASC,EAAI,EAAGA,EAAID,EAAa,OAAQC,IAAK,CAC5C,IAAMC,EAAIF,EAAaC,CAAC,EACxBD,EAAaC,CAAC,EAAI,CAChB,KAAMC,EAAE,CAAC,EACT,KAAMA,EAAE,CAAC,EACT,SAAUA,EAAE,CAAC,EACb,SAAUA,EAAE,CAAC,GAAK,EAClB,UAAWA,EAAE,CAAC,GAAK,KACnB,SAAU,CAAC,CACb,CACF,CACA,IAAIC,EAAeH,EAGfI,EAAsB,CACxB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",
  "names": ["require_intlTelInput", "__commonJSMin", "exports", "module", "factory", "factoryOutput", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "target", "all", "name", "__copyProps", "to", "from", "except", "desc", "key", "__toCommonJS", "mod", "intlTelInput_exports", "intlTelInput_default", "allCountries", "i", "c", "data_default", "intlTelInputGlobals", "input", "id2", "id", "defaults", "regionlessNanpNumbers", "forEachInstance", "method", "instances", "instance", "Iti", "customOptions", "forceShowFlags", "autoCountryPromise", "resolve", "reject", "utilsScriptPromise", "iso2", "dialCode", "priority", "index", "lowerCaseOnlyCountries", "country", "lowerCaseExcludeCountries", "a", "b", "rootIso2Code", "j", "areaCode", "k", "partialDialCode", "countryData", "attrs", "container", "el", "value", "allowDropdown", "showSelectedDialCode", "showFlags", "containerClass", "hiddenInput", "dropdownContainer", "fixDropdownWidth", "useFullscreenPopup", "countrySearch", "i18n", "parentClass", "wrapper", "extraClasses", "dropdownClasses", "telInputName", "names", "countries", "className", "preferred", "idSuffix", "listItem", "content", "overrideAutoCountry", "attributeValue", "inputValue", "val", "isRegionlessNanp", "initialCountry", "lowerInitialCountry", "e", "label", "iso2Lower", "strictMode", "formatAsYouType", "userOverrideFormatting", "isFormattingChar", "isPaste", "currentCaretPos", "relevantCharsBeforeCaret", "isDeleteForwards", "formattedValue", "newCaretPos", "isInitialPlus", "isNumeric", "isAllowedChar", "fullNumber", "coreNumber", "hasReachedMaxLength", "relevantChars", "prevCaretPos", "count", "number", "max", "numeric", "s", "firstElementChild", "shouldHaveClass", "pos", "windowTop", "inputTop", "dropdownHeight", "dropdownFitsBelow", "dropdownFitsAbove", "positionDropdownAboveInput", "extraTop", "isOpening", "query", "queryTimer", "doFilter", "inputQuery", "keyupTimer", "isReset", "isFirst", "normalisedQuery", "normalisedCountryName", "fullDialCode", "searchText", "next", "doFocus", "useNational", "NATIONAL", "INTERNATIONAL", "format", "plusIndex", "selectedDialCode", "iso2Codes", "alreadySelected", "shouldFocus", "prevItem", "allowFail", "prevCountry", "flagClass", "a11yText", "selectedFlagWidth", "nextItem", "numberType", "exampleNumber", "validNumber", "title", "containerClone", "flagsContainerClone", "selectedFlagClone", "width", "autoPlaceholder", "placeholderNumberType", "nationalMode", "customPlaceholder", "shouldSetPlaceholder", "placeholder", "flagChanged", "element", "middle", "containerHeight", "containerTop", "containerBottom", "elementHeight", "elementTop", "elementBottom", "newScrollTop", "middleOffset", "heightDifference", "newDialCodeBare", "inputVal", "newDialCode", "newNumber", "prevDialCode", "includeAreaCode", "numericChars", "prefix", "numericVal", "start", "result", "form", "mobileOnly", "type", "injectScript", "path", "handleSuccess", "handleFailure", "script", "intlTelInput", "options", "iti", "import_intlTelInput", "React", "useRef", "useEffect", "PropTypes", "IntlTelInput", "initialValue", "onChangeNumber", "onChangeCountry", "onChangeValidity", "onChangeErrorCode", "usePreciseValidation", "initOptions", "className", "disabled", "onFocus", "onBlur", "placeholder", "inputProps", "inputRef", "itiRef", "update", "num", "countryIso", "errorCode", "inputRefCurrent", "intlTelInput", "IntlTelInput_default"]
}
